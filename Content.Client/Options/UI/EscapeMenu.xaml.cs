using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.UserInterface.Controls;
using Robust.Client.Console;
using Content.Client.UserInterface.Systems.EscapeMenu;
using Content.Client.UserInterface.Systems.Guidebook;
using Content.Shared.Corvax.CCCVars;
using Robust.Client.UserInterface;
using Robust.Client.Player;
using Robust.Shared.Configuration;
using Content.Client.Stylesheets;

namespace Content.Client.Options.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class EscapeMenu : DefaultWindow
    {
        [Dependency] private readonly IUriOpener _uriOpener = default!;
        [Dependency] private readonly IPlayerManager _playerManager = default!;
        [Dependency] private readonly IConfigurationManager _cfg = default!;
        public EscapeMenu()
        {
            RobustXamlLoader.Load(this);
            Boosty.OnPressed += _ => _uriOpener.OpenUri(new Uri("https://boosty.to/mini-station"));
            Discord.OnPressed += _ => _uriOpener.OpenUri(new Uri("https://discord.gg/mini-station"));
            AuthorizationDiscordButton.OnPressed += _ =>
            {
                var userId = _playerManager.LocalSession?.UserId;
                var requestUrl = $"{_cfg.GetCVar(CCCVars.DiscordAuthApiUrl)}/login/{userId.ToString()}";
                _uriOpener.OpenUri(new Uri(requestUrl));
            };
        }
    }
}
